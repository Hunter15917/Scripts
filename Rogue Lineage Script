 for i,v in pairs(getconnections(game:GetService("ScriptContext").Error)) do 
        v:Disable()
 end

local wrksp = game:GetService("Workspace");
local StarterGui = game:GetService("StarterGui")
local UIS = game:GetService("UserInputService")

local Player = game.Players.LocalPlayer

if not Player.Character then
     StarterGui:SetCore("SendNotification", {
            Title = "NOTIFICATION";
            Text = "PRESS PLAY FIRST";
            Duration = 15;
            Button1 = "REMOVE PROMPT"
        })
   return
end


local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hunter15917/Scripts/main/MainGUI.md"))()
local venyx = library.new("Sparrow", 5013109572)
 
 
-- themes
       local themes = {
       Background = Color3.fromRGB(0, 0, 0),
        Glow = Color3.fromRGB(159, 0, 255),
        Accent = Color3.fromRGB(47, 11, 227),
        LightContrast = Color3.fromRGB(17, 17, 223),
        DarkContrast = Color3.fromRGB(12, 12, 12),  
        TextColor = Color3.fromRGB(255, 255, 255)
}
 
 
-- first page
local page = venyx:addPage("yerrrr", 5012544693)
local section1 = page:addSection("Sliders")
local section2 = page:addSection("Toggles")
local section3 = page:addSection("Extras")


-- variables
local Character = Player.Character 
local HumanoidRootPart = Character.HumanoidRootPart
local Camera = wrksp.CurrentCamera;
    
local ExploitBoosts = {
    ["SpeedBoost"] = 30,
    ["ClimbBoost"] = 2,
}

local FullBright = false

local ESPToggle = false
local MeasuredDistance = 0

local mana = false;
local alreadyfalse = false;
local cantoggle = true

local oldBoosts = {}
local newBoosts = {}

local Toggles = {
    ["TrinketESPToggle"] = false,
    ["Infinite Mana Toggle"] = false,
    ["WalkSpeed Toggle"] = false,
    ["PlayerESPToggle"] = false
    
}

local PlayerESPTable = {}

  local Meshes = {
        ["rbxassetid://16657069"] = "Money Bag",
        ["rbxassetid://60791940"] = "Scroll",
        ["rbxassetid://2877143560"] = "Jewel",
        ["rbxassetid://2637545558"] = "Ring",
        ["rbxassetid://439102658"] = "Phoenix Feather",
        ["rbxassetid://13116112"] = "Goblet",
        ["rbxassetid://5196577540"] = "Amulet",
        ["rbxassetid://5204003946"] = "Goblet",
        ["rbxassetid://5204453430"] = "Scroll",
        ["rbxassetid://5196782997"] = "Old Ring",
        ["rbxassetid://%2016657069%20"] = "Money Bag",
        ["rbxassetid://%2060791940%20"] = "Scroll",
        ["rbxassetid://%202877143560%20"] = "Jewel",
        ["rbxassetid://%202637545558%20"] = "Ring",
        ["rbxassetid://%20439102658%20"] = "Phoenix Feather",
        ["rbxassetid://%2013116112%20"] = "Goblet",
        ["rbxassetid://%205196577540%20"] = "Amulet",
        ["rbxassetid://%205204003946%20"] = "Goblet",
        ["rbxassetid://%205204453430%20"] = "Scroll",
        ["rbxassetid://%205196782997%20"] = "Old Ring",
        ["rbxassetid://5196776695"] = "Ring",
        ["rbxassetid://%205196776695%20"] = "Ring",
    
    }

local function CreateTrinketESP(Object)
local ESP = Drawing.new("Text")
ESP.Color = Color3.fromRGB(255,255,255)
ESP.Size = 17
ESP.Outline = true
ESP.Center = true
ESP.Visible = true
ESP.Font = 0

local DistanceDisplay = Drawing.new("Text")
DistanceDisplay.Color = Color3.fromRGB(192,192,192)
DistanceDisplay.Size = 17
DistanceDisplay.Outline = true
DistanceDisplay.Center = true
DistanceDisplay.Visible = true
DistanceDisplay.Font = 0

        pcall(function()
            if Object.Parent:IsA("MeshPart") and Meshes[Object.Parent.MeshId]  then 
                ESP.Text = tostring(Meshes[Object.Parent.MeshId]) 
            elseif Object.Parent:IsA("Part") and Object.Parent:FindFirstChildWhichIsA("SpecialMesh") and Meshes[Object.Parent:FindFirstChildWhichIsA("SpecialMesh").MeshId] then
                ESP.Text = tostring(Meshes[Object.Parent:FindFirstChildWhichIsA("SpecialMesh").MeshId])
            elseif Object.Parent:IsA("Part") and Object.Parent:FindFirstChildWhichIsA("SpecialMesh") and Object.Parent:FindFirstChild("OrbParticle") then
                ESP.Text = tostring("???")
            else
                ESP.Text = tostring("Opal")
            end
        end)



local rs 
rs = game:GetService("RunService").RenderStepped:Connect(function()
      local realpos, onscreen = workspace.CurrentCamera:WorldToViewportPoint(Object.Position)
      local RoundedDistance = math.floor((Character.HumanoidRootPart.Position - Object.Position).Magnitude + 0.5)  
   
   
      if not Object:IsDescendantOf(workspace) then
           rs:Disconnect();
           rs = nil; 
           ESP:Remove()
           DistanceDisplay:Remove()
           return 
      end
      if onscreen and RoundedDistance <= MeasuredDistance and Toggles["TrinketESPToggle"] == true and cantoggle == true then
         ESP.Position = Vector2.new(realpos.X, realpos.Y)
         DistanceDisplay.Position = Vector2.new(realpos.X, realpos.Y) + Vector2.new(0, 15)
         DistanceDisplay.Text = tostring(RoundedDistance) 
         
         ESP.Visible = true
         DistanceDisplay.Visible = true
      else
           ESP.Visible = false
           DistanceDisplay.Visible = false
          end 
   end)
end


local function PlayerESP(PlayerESP)
   local Name_Distance = Drawing.new("Text")
   Name_Distance.Size = 15
   Name_Distance.Center = true
   Name_Distance.Outline = true
   Name_Distance.Font = 0;
   Name_Distance.Color = Color3.fromRGB(255, 255, 255)
  
   local Health = Drawing.new("Text")
   Health.Size = 15
   Health.Center = true
   Health.Outline = true
   Health.Font = 0;
   Health.Color = Color3.fromRGB(255, 255, 255)
  
   local rs
   rs = game:GetService("RunService").RenderStepped:Connect(function()
        if game.Players:FindFirstChild(PlayerESP.Name) == nil then
           rs:Disconnect()
           Name_Distance:Remove()
           Health:Remove()
        end                                                   
 
        if table.find(PlayerESPTable, PlayerESP) and Toggles["PlayerESPToggle"] == true and cantoggle == true then
          local World_Pos, Onscreen = workspace.CurrentCamera:WorldToViewportPoint(PlayerESP.Character.Head.Position)
          
          if Onscreen then
           
             Name_Distance.Text = "|"..PlayerESP.Name.."| |"..math.floor((PlayerESP.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude + .5).."|"  
             Health.Text = "|"..math.floor(PlayerESP.Character.Humanoid.Health + .5).." / "..math.floor(PlayerESP.Character.Humanoid.MaxHealth + .5).."|"
            
             Health.Position = Vector2.new(World_Pos.X, World_Pos.Y) - Vector2.new(0,30)
             Name_Distance.Position = Vector2.new(World_Pos.X, World_Pos.Y) - Vector2.new(0,45)
             Name_Distance.Visible = true
             Health.Visible = true
             else
             Name_Distance.Visible = false 
             Health.Visible = false
          end
        
       
         else
          Name_Distance.Visible = false
          Health.Visible = false
        end                                                                                                               
    end)
end


local function NOTIFICATION(Title, value)
   spawn(function()
    if cantoggle == true then
        venyx:Notify(Title, value)  
      end
   end)
end

Character.Humanoid.Died:Connect(function()
NOTIFICATION("NOTIFICATION","Re-Execute the script")
venyx:deleteui()
cantoggle = false
ExploitBoosts["SpeedBoost"] = 0
ExploitBoosts["ClimbBoost"] = 0
FullBright = false
ESPToggle = false
MeasuredDistance = 0
mana = false;
oldBoosts = {}
newBoosts = {}
alreadyfalse = false;
Toggles["TrinketESPToggle"] = false
Toggles["Infinite Mana Toggle"] = false
Toggles["WalkSpeed Toggle"] = false
Toggles["PlayerESPToggle"] = false
Toggle1 = false
Toggle2 = false
Toggle3 = false
Toggle4 = false
Toggle5 = false
Toggle6 = false
    spawn(function()
       wait(5)
        game.CoreGui.Sparrow:Destroy() 
        venyx:deleteui()
    end)
end)



section1:addSlider("Walk Speed", 0, 0, 100, function(value)
ExploitBoosts["SpeedBoost"] = value
end)

section1:addSlider("Trinket ESP Distance", 0, 0, 5000, function(value)
MeasuredDistance = value
end)


section2:addToggle("Walk Speed", nil, function(r)
if r then
          Toggle1 = true
         
         
          if Toggles["WalkSpeed Toggle"] == false then
            NOTIFICATION("NOTIFICATION","Press the keybind in settings to activate")
          end

          else
            Toggle1 = false   
          end
 while Toggle1 do
    wait()
      pcall(function()
     if Toggles["WalkSpeed Toggle"] == true and cantoggle == true then
            local CurrentBoosts = game.Players.LocalPlayer.Character.Boosts
            for n,v in pairs(ExploitBoosts) do
                if CurrentBoosts:FindFirstChild(n) then
                    CurrentBoosts[n].Value = v
                end
            end  
        end
    end)    
end
end)



section2:addToggle("Player ESP", nil, function(r)
if r then
       if cantoggle == true then
            Toggle5 = true 
        end
       
        
        if Toggles["PlayerESPToggle"] == false then
             NOTIFICATION("NOTIFICATION","Press the keybind in settings to activate")
         end
        
         else
        Toggle5 = false
    end
end)


section2:addToggle("Trinket ESP", nil, function(r)
if r then
        if cantoggle == true then
        Toggle4 = true
        end
        
         if Toggles["TrinketESPToggle"] == false then
              NOTIFICATION("NOTIFICATION","Press the keybind in settings to activate")
         end
         else
        Toggle4 = false
    end
end)


section2:addToggle("Infinite Mana", nil, function(r)
if r then
           if cantoggle == true then
        Toggle6 = true
        end
         if Toggles["Infinite Mana Toggle"] == false then
              NOTIFICATION("NOTIFICATION","Press the keybind in settings to activate")
         end
         else
        Toggle6 = false
    end
end)


section3:addToggle("Full Bright", nil, function(r)
if r then
         Toggle2 = true
        
         game.Lighting.Brightness = 1
         game.Lighting.Ambient = Color3.fromRGB(255, 255, 255) 
         else
         Toggle2 = false
         
         game.Lighting.Brightness = 0.12
         game.Lighting.Ambient = Color3.fromRGB(20, 20, 20)
         end
end)

section3:addToggle("No Fog", nil, function(r)
if r then
          Toggle3 = true
          game.Lighting.FogEnd = 99999
         game.Lighting.FogStart = 99999
          else
        Toggle3 = false
         game.Lighting.FogEnd = 1125
         game.Lighting.FogStart = 0
    end
end)


section3:addButton("Infinite Bard", function()
NOTIFICATION("NOTIFICATION","Activated | Cant Turn Off")


game:GetService("Players").LocalPlayer.PlayerGui.BardGui.LocalScript.Button.Label:Destroy()
game:GetService("Players").LocalPlayer.PlayerGui.BardGui.ErrorFrame:Destroy()
end)

section3:addButton("NO FALL DAMAGE", function()
NOTIFICATION("NOTIFICATION","Activated | Cant Turn Off")


loadstring(game:HttpGet("https://pastebin.com/raw/ERDp2x5W", true))()  
end)


     
local page = venyx:addPage("Settings", 5012544693)
local section1 = page:addSection("Settings")


section1:addButton("Delete Gui", function()
NOTIFICATION("NOTIFICATION","Successfully Deleted")
venyx:deleteui()
cantoggle = false
ExploitBoosts["SpeedBoost"] = 0
ExploitBoosts["ClimbBoost"] = 0
FullBright = false
ESPToggle = false
MeasuredDistance = 0
mana = false;
oldBoosts = {}
newBoosts = {}
alreadyfalse = false;
Toggle1 = false
Toggle2 = false
Toggle3 = false
Toggle4 = false
Toggle5 = false
Toggle6 = false
Toggles["TrinketESPToggle"] = false
Toggles["Infinite Mana Toggle"] = false
Toggles["WalkSpeed Toggle"] = false
Toggles["PlayerESPToggle"] = false
    spawn(function()
       wait(5)
        game.CoreGui.Sparrow:Destroy() 
        venyx:deleteui()
    end)
end)

section1:addKeybind("Minimize Key", Enum.KeyCode.Minus, function()
if cantoggle then
  venyx:toggle()  
end
end, function()
end)


section1:addKeybind("WalkSpeed Keybind", Enum.KeyCode.KeypadOne, function()
if Toggle1 == true then
    
if Toggles["WalkSpeed Toggle"] == false then
   Toggles["WalkSpeed Toggle"] = true
     NOTIFICATION("NOTIFICATION","Turned On")
            local CurrentBoosts = game.Players.LocalPlayer.Character.Boosts
            for _,boost in pairs(CurrentBoosts:GetChildren()) do
                if ExploitBoosts["SpeedBoost"] ~= nil then
                    oldBoosts["SpeedBoost"] = boost.Value
                end
            end

            for n,v in pairs(ExploitBoosts) do
                if CurrentBoosts:FindFirstChild("SpeedBoost") then
                    CurrentBoosts["SpeedBoost"].Value = v
                else
                    local NewBoost = Instance.new("NumberValue")
                    NewBoost.Parent = CurrentBoosts
                    NewBoost.Name = "SpeedBoost"
                    NewBoost.Value = v
                    table.insert(newBoosts, n)
                end
            end  
    else
 NOTIFICATION("NOTIFICATION","Turned Off")
   Toggles["WalkSpeed Toggle"] = false
    local CurrentBoosts = game.Players.LocalPlayer.Character.Boosts
            for _,boost in pairs(CurrentBoosts:GetChildren()) do
                if table.find(newBoosts, "SpeedBoost") then
                    boost:Destroy()
                end
                if oldBoosts["SpeedBoost"] ~= nil then
                    boost.Value = oldBoosts["SpeedBoost"]
                end
            end
            newBoosts = {}
            oldBoosts = {}
    end
else
    NOTIFICATION("NOTIFICATION","Turn on the Toggle")
end

end, function()
end)


section1:addKeybind("Player ESP Keybind", Enum.KeyCode.KeypadTwo, function()
if Toggle5 == true then
    
if Toggles["PlayerESPToggle"] == false then
   Toggles["PlayerESPToggle"] = true
   NOTIFICATION("NOTIFICATION","Turned On")
    else
   Toggles["PlayerESPToggle"] = false
NOTIFICATION("NOTIFICATION","Turned Off")
    end
else
    NOTIFICATION("NOTIFICATION","Turn on the Toggle")
end
end, function()
end)


section1:addKeybind("Trinket ESP Keybind", Enum.KeyCode.KeypadThree, function()
if Toggle4 == true then
    
if Toggles["TrinketESPToggle"] == false then
   Toggles["TrinketESPToggle"] = true
     NOTIFICATION("NOTIFICATION","Turned On")
    else
  NOTIFICATION("NOTIFICATION","Turned Off")
   Toggles["TrinketESPToggle"] = false
    end
else
   NOTIFICATION("NOTIFICATION","Turn on the Toggle")
end
end, function()
end)

section1:addKeybind("Infinite Mana Keybind", Enum.KeyCode.KeypadFour, function()
if Toggle6 == true then
    
if Toggles["Infinite Mana Toggle"] == false then
   Toggles["Infinite Mana Toggle"] = true
    alreadyfalse = false
    NOTIFICATION("NOTIFICATION","Turned On")
  spawn(function()
 
 while wait() do
  if Toggles["Infinite Mana Toggle"] == true then
      pcall(function()
     if Character:FindFirstChild("Mana") then
        Character.Mana.Value = 100
        end
   end)
   else
      if alreadyfalse == false then
           alreadyfalse = true
            pcall(function()
           Character.Mana.Value = 0
           end)
           break
       end   
    end
end
 end)

    
   else
   NOTIFICATION("NOTIFICATION","Turned Off")
   Toggles["Infinite Mana Toggle"] = false
   pcall(function()
   Character.Mana.Value = 0
    end)
    end
else
NOTIFICATION("NOTIFICATION","Turn on the Toggle")
end
end, function()
end)




for i,Players in pairs(game:GetService("Players"):GetPlayers()) do
   if game.Players.LocalPlayer ~= Players then
       
   if Players.Character then
   if not table.find(PlayerESPTable, Players) then
         table.insert(PlayerESPTable,Players)
         PlayerESP(Players)
         print("insert")
       end
      Players.Character.Humanoid.Died:Connect(function()
      if table.find(PlayerESPTable, Players) then
         table.remove(PlayerESPTable, i)
         print("died")
          end                                  
       end)
   end
   Players.CharacterAdded:Connect(function()
         if not table.find(PlayerESPTable, Players) then
         table.insert(PlayerESPTable,Players)
         PlayerESP(Players)
         print("char added")
     end
   Players.Character.Humanoid.Died:Connect(function()
      if table.find(PlayerESPTable, Players) then
         table.remove(PlayerESPTable, i)
         print("died")
           end                                  
        end)
     end)
   end
end 
   
    for i,v in pairs(workspace:GetChildren()) do 
        if v:IsA("MeshPart") or v:IsA("UnionOperation") or v:IsA("Part") then 
            for i2,v2 in pairs(v:GetDescendants()) do 
                if v2:IsA("ClickDetector") then 
                     CreateTrinketESP(v2.Parent)
                end
            end
        end
    end
    
    workspace.ChildAdded:Connect(function(v)
        if v:IsA("MeshPart") or v:IsA("UnionOperation") or v:IsA("Part") then 
            for i2,v2 in pairs(v:GetDescendants()) do 
                if v2:IsA("ClickDetector") then 
                    CreateTrinketESP(v2.Parent)
                end
            end
        end
    end)
